/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package es.marianetbai.vista;
import es.marianetbai.controlador.exceptions.NonexistentEntityException;
import es.marianetbai.controlador.ClienteJpaController;
import es.marianetbai.controlador.FacturaJpaController;
import es.marianetbai.modelo.Cliente;
import es.marianetbai.modelo.Factura;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Maria
 */
public class EditarFactura extends javax.swing.JFrame {

    /**
     * Creates new form EditarFactura
     */
    
    ImagenFondo ejemplo = new ImagenFondo();
    private FacturaJpaController facturaJpaController;

    public EditarFactura() {
        Locale.setDefault(Locale.UK);
        this.setContentPane(ejemplo);
        this.setSize(1040,570);
        this.setLocationRelativeTo(null);
        initComponents();
                
        //inicializamos el controlador de cliente antes de usarlo
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("persistence");
        ujpa = new ClienteJpaController(emf);     
        
        //inicializamos el controlador de factura
        facturaJpaController = new FacturaJpaController(emf);
        
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        cargarClientesEnComboBox();
        mostrarFacturasEnTabla();     
        
        //establecemos que el id no se pueda modificar desde el principio
        txtId.setEditable(false);
        txtId.setBackground(Color.LIGHT_GRAY);
        txtId.setFocusable(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblEditarFactura = new javax.swing.JLabel();
        lblSeleccioneFactura = new javax.swing.JLabel();
        scrollPaneTabla = new javax.swing.JScrollPane();
        tablaListaFactura = new javax.swing.JTable();
        lblId = new javax.swing.JLabel();
        lblAsunto = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtAsunto = new javax.swing.JTextField();
        lblFecha = new javax.swing.JLabel();
        lblCantidad = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        lblTipo = new javax.swing.JLabel();
        lblCliente = new javax.swing.JLabel();
        cbxTipo = new javax.swing.JComboBox<>();
        btnEditar = new javax.swing.JButton();
        btnRegistrar = new javax.swing.JButton();
        cbxCliente = new javax.swing.JComboBox();
        lblIcono = new javax.swing.JLabel();
        lblIconoEditar = new javax.swing.JLabel();
        lblIconoBuscar = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        spnFecha = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("es/marianetbai/vista/Bundle"); // NOI18N
        setTitle(bundle.getString("EditarFactura.title")); // NOI18N
        setSize(new java.awt.Dimension(1040, 570));

        lblEditarFactura.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lblEditarFactura.setText(bundle.getString("EditarFactura.lblEditarFactura.text")); // NOI18N

        lblSeleccioneFactura.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        lblSeleccioneFactura.setText(bundle.getString("EditarFactura.lblSeleccioneFactura.text")); // NOI18N

        tablaListaFactura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Subject", "Date", "Amount", "Type", "Client", "Deleted"
            }
        ));
        scrollPaneTabla.setViewportView(tablaListaFactura);

        lblId.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblId.setForeground(new java.awt.Color(153, 153, 153));
        lblId.setText(bundle.getString("EditarFactura.lblId.text")); // NOI18N

        lblAsunto.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblAsunto.setForeground(new java.awt.Color(153, 153, 153));
        lblAsunto.setText(bundle.getString("EditarFactura.lblAsunto.text")); // NOI18N

        txtId.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        txtAsunto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtAsunto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAsuntoActionPerformed(evt);
            }
        });

        lblFecha.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblFecha.setForeground(new java.awt.Color(153, 153, 153));
        lblFecha.setText(bundle.getString("EditarFactura.lblFecha.text")); // NOI18N

        lblCantidad.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblCantidad.setForeground(new java.awt.Color(153, 153, 153));
        lblCantidad.setText(bundle.getString("EditarFactura.lblCantidad.text")); // NOI18N

        txtCantidad.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadActionPerformed(evt);
            }
        });

        lblTipo.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblTipo.setForeground(new java.awt.Color(153, 153, 153));
        lblTipo.setText(bundle.getString("EditarFactura.lblTipo.text")); // NOI18N

        lblCliente.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblCliente.setForeground(new java.awt.Color(153, 153, 153));
        lblCliente.setText(bundle.getString("EditarFactura.lblCliente.text")); // NOI18N

        cbxTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Empresas", "Particulares" }));
        cbxTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTipoActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnEditar.setText(bundle.getString("EditarFactura.btnEditar.text")); // NOI18N
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnRegistrar.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnRegistrar.setText(bundle.getString("EditarFactura.btnRegistrar.text")); // NOI18N
        btnRegistrar.setToolTipText(bundle.getString("EditarFactura.btnRegistrar.toolTipText")); // NOI18N
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        cbxCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxClienteActionPerformed(evt);
            }
        });

        lblIcono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icon.png"))); // NOI18N

        lblIconoEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icon3.png"))); // NOI18N

        lblIconoBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscarCliente.png"))); // NOI18N

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icons8-de-acuerdo-48.png"))); // NOI18N

        spnFecha.setModel(new javax.swing.SpinnerDateModel());
        spnFecha.setBorder(null);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(313, 313, 313)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRegistrar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblIcono, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblEditarFactura, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSeleccioneFactura, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scrollPaneTabla, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(txtAsunto, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(117, 117, 117)
                                .addComponent(lblAsunto, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbxTipo, 0, 121, Short.MAX_VALUE)
                                    .addComponent(spnFecha, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE))
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cbxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblIconoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblIconoEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEditar)))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lblEditarFactura)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSeleccioneFactura)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scrollPaneTabla, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                    .addComponent(lblIcono, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblId)
                    .addComponent(lblAsunto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAsunto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFecha)
                    .addComponent(lblCantidad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCantidad)
                    .addComponent(spnFecha, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTipo)
                            .addComponent(lblCliente))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblIconoBuscar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cbxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(83, 83, 83))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEditar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblIconoEditar, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(24, 24, 24))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void txtAsuntoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAsuntoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAsuntoActionPerformed

    private void txtCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantidadActionPerformed

    private void cbxTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxTipoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        //obtenemos la fila seleccionada en la tabla
        int filaSeleccionada = tablaListaFactura.getSelectedRow();

        //verificamos primero si hay una fila seleccionada
        if (filaSeleccionada != -1) {
            //entonces obtenemos los datos de la fila seleccionada
            String id = tablaListaFactura.getValueAt(filaSeleccionada, 0).toString();
            String asunto = tablaListaFactura.getValueAt(filaSeleccionada, 1).toString();
            String fecha = tablaListaFactura.getValueAt(filaSeleccionada, 2).toString();
            String cantidad = tablaListaFactura.getValueAt(filaSeleccionada, 3).toString();
            String tipo = tablaListaFactura.getValueAt(filaSeleccionada, 4).toString();
            String cliente = tablaListaFactura.getValueAt(filaSeleccionada, 5).toString();

            //cargamos los datos en los campos correspondientes
            txtId.setText(id);
            txtAsunto.setText(asunto);
            
            txtCantidad.setText(cantidad);
            cbxTipo.setSelectedItem(tipo);
            for (int i = 0; i < cbxCliente.getItemCount(); i++) {
                if (cbxCliente.getItemAt(i).toString().equals(cliente)) {
                    //seleccionamos el cliente encontrado en el JComboBox
                    cbxCliente.setSelectedIndex(i);
                    break;
                }
            }
            JOptionPane.showMessageDialog(this, "Data uploaded for editing");
        } else {
            JOptionPane.showMessageDialog(this, "Error: There is no invoice selected to edit",
                    "Selection error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        //obtenemos los datos editados de los campos
        String id = txtId.getText();
        String asunto = txtAsunto.getText();
        String cantidad = txtCantidad.getText();
        String tipo = cbxTipo.getSelectedItem().toString();
        Cliente cliente = (Cliente) cbxCliente.getSelectedItem();
        Date fecha = (Date) spnFecha.getValue();  // Asegúrate de importar java.util.Date

        try {
            //y obtenemos la factura actual desde la base de datos
            Factura factura = facturaJpaController.findFactura(Integer.parseInt(id));

            //ahora actualizamos los datos de la factura con los nuevos valores
            factura.setAsunto(asunto);
            factura.setFecha(fecha);
            factura.setCantidad(Double.valueOf(cantidad));
            factura.setTipo(tipo);
            factura.setCliente(cliente);

            //utiliza el método edit para guardar los cambios en la base de datos
            facturaJpaController.edit(factura);

            //volvemos a cargar y mostrar las facturas en la tabla
            mostrarFacturasEnTabla();
            JOptionPane.showMessageDialog(this, "Invoice updated correctly");
        } catch (NonexistentEntityException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: the invoice doesn't exist", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error updating the invoice", "Error", JOptionPane.ERROR_MESSAGE);        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void cbxClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxClienteActionPerformed

    }//GEN-LAST:event_cbxClienteActionPerformed

    private void cargarClientesEnComboBox() {
        //obtengo la lista de clientes desde la base de datos
        List<Cliente> clientes = ujpa.findClienteEntities();

        //creamos un modelo de ComboBox para almacenar los nombres de los clientes
        DefaultComboBoxModel<Cliente> comboBoxModel = new DefaultComboBoxModel<>();

        //añadimos los nombres de los clientes al modelo del ComboBox
        for (Cliente cliente : clientes) {
            comboBoxModel.addElement(cliente);
        }

        //establecemos el modelo en el JComboBox
        cbxCliente.setModel(comboBoxModel);
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditarFactura().setVisible(true);
            }
        });
    }

    private ClienteJpaController ujpa;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox cbxCliente;
    private javax.swing.JComboBox<String> cbxTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAsunto;
    private javax.swing.JLabel lblCantidad;
    private javax.swing.JLabel lblCliente;
    private javax.swing.JLabel lblEditarFactura;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblIcono;
    private javax.swing.JLabel lblIconoBuscar;
    private javax.swing.JLabel lblIconoEditar;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblSeleccioneFactura;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JScrollPane scrollPaneTabla;
    private javax.swing.JSpinner spnFecha;
    private javax.swing.JTable tablaListaFactura;
    private javax.swing.JTextField txtAsunto;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables

    class ImagenFondo extends JPanel{
        private Image imagen;
        public void paint (Graphics g){
            imagen = new javax.swing.ImageIcon(getClass().getResource("/imagenes/addf.png")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }
    }
    
    public void mostrarFacturasEnTabla() {
        try {
            //obtenemos la lista actual de facturas
            List<Factura> listaFacturas = facturaJpaController.findFacturaEntities();

            //y actualizamos el modelo de la tabla con la nueva lista de facturas
            DefaultTableModel modeloTabla = (DefaultTableModel) tablaListaFactura.getModel();

            //liampiamos la tabla antes de agregar las nuevas filas
            modeloTabla.setRowCount(0);

            //agregamos la información de cada factura a la tabla
            for (Factura factura : listaFacturas) {
                //formateamos la cantidad para que aparezca sin decimales
                DecimalFormat decimalFormat = new DecimalFormat("#");
                String cantidadFormateada = decimalFormat.format(factura.getCantidad());

                //formatemoas la fecha para mostrar solo la fecha
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                String fechaFormateada = dateFormat.format(factura.getFecha());

                modeloTabla.addRow(new Object[]{factura.getId(), factura.getAsunto(), fechaFormateada,
                        cantidadFormateada, factura.getTipo(), factura.getCliente(), factura.getBaja()});
            }
            //tras agregar las filas, vuelve a establecer el modelo de la tabla
            tablaListaFactura.setModel(modeloTabla);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

}
