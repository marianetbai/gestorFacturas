/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package es.marianetbai.vista;

import es.marianetbai.controlador.ClienteJpaController;
import es.marianetbai.controlador.FacturaJpaController;
import es.marianetbai.modelo.Cliente;
import es.marianetbai.modelo.Factura;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.awt.Image;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Maria
 */
public class AddFactura extends javax.swing.JFrame {

    /**
     * Creates new form AddFactura
     */
    
    ImagenFondo ejemplo = new ImagenFondo();
    
    public AddFactura() {
        Locale.setDefault(Locale.UK);
        this.setContentPane(ejemplo);
        this.setSize(1040,570);
        this.setLocationRelativeTo(null);
        initComponents();    
        
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("persistence");
        this.ujpa = new ClienteJpaController(emf);
        
        SpinnerDateModel model = new SpinnerDateModel();
        model.setStart(new Date(2000 - 1900, 0, 1)); //1 de enero de 2000
        model.setEnd(new Date()); //fecha actual

        spnFecha.setModel(model);
        spnFecha.setEditor(new JSpinner.DateEditor(spnFecha, "dd/MM/yyyy"));

        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
       
        cargarClientesEnComboBox();
        
        //establecemos que el id no se pueda modificar desde el principio
        txtId.setEditable(false);
        txtId.setBackground(Color.LIGHT_GRAY);
        txtId.setFocusable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblAddFactura = new javax.swing.JLabel();
        lblCompletar = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        lblAsunto = new javax.swing.JLabel();
        txtAsunto = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        spnFecha = new javax.swing.JSpinner();
        lblFecha = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        lblCantidad = new javax.swing.JLabel();
        cbxTipo = new javax.swing.JComboBox<>();
        lblTipo = new javax.swing.JLabel();
        lblCliente = new javax.swing.JLabel();
        scrollPaneTabla = new javax.swing.JScrollPane();
        tablaListaFactura = new javax.swing.JTable();
        btnRegistrar = new javax.swing.JButton();
        cbxCliente = new javax.swing.JComboBox();
        lblIcono1 = new javax.swing.JLabel();
        lblIcono2 = new javax.swing.JLabel();
        lblIcono3 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("es/marianetbai/vista/Bundle"); // NOI18N
        setTitle(bundle.getString("AddFactura.title")); // NOI18N
        setSize(new java.awt.Dimension(1040, 570));

        lblAddFactura.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lblAddFactura.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddFactura.setText(bundle.getString("AddFactura.lblAddFactura.text")); // NOI18N

        lblCompletar.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        lblCompletar.setText(bundle.getString("AddFactura.lblCompletar.text")); // NOI18N

        lblId.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblId.setForeground(new java.awt.Color(153, 153, 153));
        lblId.setText(bundle.getString("AddFactura.lblId.text")); // NOI18N

        lblAsunto.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblAsunto.setForeground(new java.awt.Color(153, 153, 153));
        lblAsunto.setText(bundle.getString("AddFactura.lblAsunto.text")); // NOI18N

        txtAsunto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtAsunto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAsuntoActionPerformed(evt);
            }
        });

        txtId.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        spnFecha.setModel(new javax.swing.SpinnerDateModel());
        spnFecha.setBorder(null);

        lblFecha.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblFecha.setForeground(new java.awt.Color(153, 153, 153));
        lblFecha.setText(bundle.getString("AddFactura.lblFecha.text")); // NOI18N

        txtCantidad.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadActionPerformed(evt);
            }
        });

        lblCantidad.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblCantidad.setForeground(new java.awt.Color(153, 153, 153));
        lblCantidad.setText(bundle.getString("AddFactura.lblCantidad.text")); // NOI18N

        cbxTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Empresas", "Particulares" }));
        cbxTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTipoActionPerformed(evt);
            }
        });

        lblTipo.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblTipo.setForeground(new java.awt.Color(153, 153, 153));
        lblTipo.setText(bundle.getString("AddFactura.lblTipo.text")); // NOI18N

        lblCliente.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblCliente.setForeground(new java.awt.Color(153, 153, 153));
        lblCliente.setText(bundle.getString("AddFactura.lblCliente.text")); // NOI18N

        tablaListaFactura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Subject", "Date", "Amount", "Type", "Deleted", "Client"
            }
        ));
        scrollPaneTabla.setViewportView(tablaListaFactura);

        btnRegistrar.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnRegistrar.setText(bundle.getString("AddFactura.btnRegistrar.text")); // NOI18N
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        cbxCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxClienteActionPerformed(evt);
            }
        });

        lblIcono1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fact.png"))); // NOI18N
        lblIcono1.setText(bundle.getString("AddFactura.lblIcono1.text")); // NOI18N

        lblIcono2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscarCliente.png"))); // NOI18N
        lblIcono2.setText(bundle.getString("AddFactura.lblIcono2.text")); // NOI18N

        lblIcono3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icons8-de-acuerdo-48.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(412, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblAddFactura)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(37, 37, 37)
                                        .addComponent(txtAsunto, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblCompletar)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(117, 117, 117)
                                                .addComponent(lblAsunto, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(lblFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(cbxTipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(spnFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(37, 37, 37)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(txtCantidad)
                                                    .addComponent(lblCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(cbxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblIcono2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblIcono1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(scrollPaneTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(59, 59, 59))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblIcono3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRegistrar)
                        .addGap(57, 57, 57))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(lblAddFactura)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCompletar)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblId)
                            .addComponent(lblAsunto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAsunto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFecha)
                            .addComponent(lblCantidad))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(spnFecha)
                            .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTipo)
                            .addComponent(lblCliente))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblIcono2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addComponent(scrollPaneTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(lblIcono1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblIcono3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtAsuntoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAsuntoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAsuntoActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void txtCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantidadActionPerformed

    private void cbxTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxTipoActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
       try {
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("persistence");
            FacturaJpaController ujpa = new FacturaJpaController(emf);
            Factura factura = new Factura();

            //obtenemos los valores de los componentes de la interfaz            
            String asunto = txtAsunto.getText();
            factura.setAsunto(asunto);
            Date fecha = (Date) spnFecha.getValue();
            factura.setFecha(fecha);
            double cantidad = Double.parseDouble(txtCantidad.getText());
            factura.setCantidad(cantidad);
            String tipo = cbxTipo.getSelectedItem().toString();
            factura.setTipo(tipo);
            Cliente cliente = (Cliente) cbxCliente.getSelectedItem();
            factura.setCliente(cliente);
            
            //ponemos la baja a 0
            factura.setBaja(0);
            
            //comprobamos si ya existe una factura con el mismo asunto
            if (facturaConMismoAsunto(asunto)) {
                JOptionPane.showMessageDialog(this, "A invoice with the same subject already exists.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        
            ujpa.create(factura);

            //obtenemos la lista actual de facturas
            List<Factura> listaFacturas = ujpa.findFacturaEntities();

            //y actualizamos el modelo de la tabla con la nueva lista de facturas
            DefaultTableModel modeloTabla = (DefaultTableModel) tablaListaFactura.getModel();

            //limpiamos la tabla antes de agregar las nuevas filas
            modeloTabla.setRowCount(0);

            //agregamos la información de cada factura a la tabla
            for (Factura facturaItem : listaFacturas) {
                //formateamos la cantidad para que aparezca sin decimales
                DecimalFormat decimalFormat = new DecimalFormat("#");
                String cantidadFormateada = decimalFormat.format(factura.getCantidad());

                //formatemoas la fecha para mostrar solo la fecha
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                String fechaFormateada = dateFormat.format(factura.getFecha());
                
                modeloTabla.addRow(new Object[]{facturaItem.getId(), facturaItem.getAsunto(), fechaFormateada,
                cantidadFormateada, facturaItem.getTipo(), facturaItem.getBaja(), facturaItem.getCliente()});
            }

            //tras agregar las filas, volvemos a establecer el modelo de la tabla
            tablaListaFactura.setModel(modeloTabla);
            
            limpiarCampos();
            
            JOptionPane.showMessageDialog(this, "The invoice has been successfully registered",
                    "Registering invoice...", JOptionPane.INFORMATION_MESSAGE);
        } catch (NumberFormatException | HeadlessException ex) {
            JOptionPane.showMessageDialog(this, "Error registering the invoice. Verify the data entered.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error when registering the invoice: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void cbxClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxClienteActionPerformed
      
    }//GEN-LAST:event_cbxClienteActionPerformed

    private void cargarClientesEnComboBox() {
        //obtengo la lista de clientes desde la base de datos
        List<Cliente> clientes = ujpa.findClienteEntities();

        //creamos un modelo de ComboBox para almacenar los nombres de los clientes
        DefaultComboBoxModel<Cliente> comboBoxModel = new DefaultComboBoxModel<>();

        //añadimos los nombres de los clientes al modelo del ComboBox
        for (Cliente cliente : clientes) {
            comboBoxModel.addElement(cliente);
        }

        //establecemos el modelo en el JComboBox
        cbxCliente.setModel(comboBoxModel);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddFactura().setVisible(true);
            }
        });
    }

    private ClienteJpaController ujpa;

        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox cbxCliente;
    private javax.swing.JComboBox<String> cbxTipo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblAddFactura;
    private javax.swing.JLabel lblAsunto;
    private javax.swing.JLabel lblCantidad;
    private javax.swing.JLabel lblCliente;
    private javax.swing.JLabel lblCompletar;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblIcono1;
    private javax.swing.JLabel lblIcono2;
    private javax.swing.JLabel lblIcono3;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JScrollPane scrollPaneTabla;
    private javax.swing.JSpinner spnFecha;
    private javax.swing.JTable tablaListaFactura;
    private javax.swing.JTextField txtAsunto;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables

    class ImagenFondo extends JPanel{
        private Image imagen;
        public void paint (Graphics g){
            imagen = new javax.swing.ImageIcon(getClass().getResource("/imagenes/addf.png")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }
    }
    
    private void limpiarCampos() {
        txtAsunto.setText("");
        txtCantidad.setText("");
        cbxTipo.setSelectedIndex(0);  
        cbxCliente.setSelectedIndex(0);  
        spnFecha.setValue(new Date()); 
    }
    
    private boolean facturaConMismoAsunto(String asunto) {
    try {
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("persistence");
        FacturaJpaController ujpa = new FacturaJpaController(emf);

        //obtenemos la lista de facturas con el mismo asunto
        List<Factura> facturasConMismoAsunto = ujpa.findFacturaByAsunto(asunto);

        //s hay facturas con el mismo asunto, retorna true
        return !facturasConMismoAsunto.isEmpty();
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Error checking existing invoices: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        return true; 
    }
}

}
